package com.example.acceptance.greendao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.acceptance.greendao.bean.ApplyItemBean;
import com.example.acceptance.greendao.bean.CheckApplyBean;
import com.example.acceptance.greendao.bean.CheckFileBean;
import com.example.acceptance.greendao.bean.CheckGroupBean;
import com.example.acceptance.greendao.bean.CheckItemBean;
import com.example.acceptance.greendao.bean.CheckTaskBean;
import com.example.acceptance.greendao.bean.CheckUnresolvedBean;
import com.example.acceptance.greendao.bean.CheckVerdBean;
import com.example.acceptance.greendao.bean.DeliveryListBean;
import com.example.acceptance.greendao.bean.DocumentBean;
import com.example.acceptance.greendao.bean.FileBean;
import com.example.acceptance.greendao.bean.PropertyBean;
import com.example.acceptance.greendao.bean.PropertyBeanX;
import com.example.acceptance.greendao.bean.RelatedDocumentIdSetBean;
import com.example.acceptance.greendao.bean.UnresolvedBean;
import com.example.acceptance.greendao.bean.DataPackageDBean;
import com.example.acceptance.greendao.bean.ApplyDeptBean;
import com.example.acceptance.greendao.bean.AcceptDeviceBean;

import com.example.acceptance.greendao.db.ApplyItemBeanDao;
import com.example.acceptance.greendao.db.CheckApplyBeanDao;
import com.example.acceptance.greendao.db.CheckFileBeanDao;
import com.example.acceptance.greendao.db.CheckGroupBeanDao;
import com.example.acceptance.greendao.db.CheckItemBeanDao;
import com.example.acceptance.greendao.db.CheckTaskBeanDao;
import com.example.acceptance.greendao.db.CheckUnresolvedBeanDao;
import com.example.acceptance.greendao.db.CheckVerdBeanDao;
import com.example.acceptance.greendao.db.DeliveryListBeanDao;
import com.example.acceptance.greendao.db.DocumentBeanDao;
import com.example.acceptance.greendao.db.FileBeanDao;
import com.example.acceptance.greendao.db.PropertyBeanDao;
import com.example.acceptance.greendao.db.PropertyBeanXDao;
import com.example.acceptance.greendao.db.RelatedDocumentIdSetBeanDao;
import com.example.acceptance.greendao.db.UnresolvedBeanDao;
import com.example.acceptance.greendao.db.DataPackageDBeanDao;
import com.example.acceptance.greendao.db.ApplyDeptBeanDao;
import com.example.acceptance.greendao.db.AcceptDeviceBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig applyItemBeanDaoConfig;
    private final DaoConfig checkApplyBeanDaoConfig;
    private final DaoConfig checkFileBeanDaoConfig;
    private final DaoConfig checkGroupBeanDaoConfig;
    private final DaoConfig checkItemBeanDaoConfig;
    private final DaoConfig checkTaskBeanDaoConfig;
    private final DaoConfig checkUnresolvedBeanDaoConfig;
    private final DaoConfig checkVerdBeanDaoConfig;
    private final DaoConfig deliveryListBeanDaoConfig;
    private final DaoConfig documentBeanDaoConfig;
    private final DaoConfig fileBeanDaoConfig;
    private final DaoConfig propertyBeanDaoConfig;
    private final DaoConfig propertyBeanXDaoConfig;
    private final DaoConfig relatedDocumentIdSetBeanDaoConfig;
    private final DaoConfig unresolvedBeanDaoConfig;
    private final DaoConfig dataPackageDBeanDaoConfig;
    private final DaoConfig applyDeptBeanDaoConfig;
    private final DaoConfig acceptDeviceBeanDaoConfig;

    private final ApplyItemBeanDao applyItemBeanDao;
    private final CheckApplyBeanDao checkApplyBeanDao;
    private final CheckFileBeanDao checkFileBeanDao;
    private final CheckGroupBeanDao checkGroupBeanDao;
    private final CheckItemBeanDao checkItemBeanDao;
    private final CheckTaskBeanDao checkTaskBeanDao;
    private final CheckUnresolvedBeanDao checkUnresolvedBeanDao;
    private final CheckVerdBeanDao checkVerdBeanDao;
    private final DeliveryListBeanDao deliveryListBeanDao;
    private final DocumentBeanDao documentBeanDao;
    private final FileBeanDao fileBeanDao;
    private final PropertyBeanDao propertyBeanDao;
    private final PropertyBeanXDao propertyBeanXDao;
    private final RelatedDocumentIdSetBeanDao relatedDocumentIdSetBeanDao;
    private final UnresolvedBeanDao unresolvedBeanDao;
    private final DataPackageDBeanDao dataPackageDBeanDao;
    private final ApplyDeptBeanDao applyDeptBeanDao;
    private final AcceptDeviceBeanDao acceptDeviceBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        applyItemBeanDaoConfig = daoConfigMap.get(ApplyItemBeanDao.class).clone();
        applyItemBeanDaoConfig.initIdentityScope(type);

        checkApplyBeanDaoConfig = daoConfigMap.get(CheckApplyBeanDao.class).clone();
        checkApplyBeanDaoConfig.initIdentityScope(type);

        checkFileBeanDaoConfig = daoConfigMap.get(CheckFileBeanDao.class).clone();
        checkFileBeanDaoConfig.initIdentityScope(type);

        checkGroupBeanDaoConfig = daoConfigMap.get(CheckGroupBeanDao.class).clone();
        checkGroupBeanDaoConfig.initIdentityScope(type);

        checkItemBeanDaoConfig = daoConfigMap.get(CheckItemBeanDao.class).clone();
        checkItemBeanDaoConfig.initIdentityScope(type);

        checkTaskBeanDaoConfig = daoConfigMap.get(CheckTaskBeanDao.class).clone();
        checkTaskBeanDaoConfig.initIdentityScope(type);

        checkUnresolvedBeanDaoConfig = daoConfigMap.get(CheckUnresolvedBeanDao.class).clone();
        checkUnresolvedBeanDaoConfig.initIdentityScope(type);

        checkVerdBeanDaoConfig = daoConfigMap.get(CheckVerdBeanDao.class).clone();
        checkVerdBeanDaoConfig.initIdentityScope(type);

        deliveryListBeanDaoConfig = daoConfigMap.get(DeliveryListBeanDao.class).clone();
        deliveryListBeanDaoConfig.initIdentityScope(type);

        documentBeanDaoConfig = daoConfigMap.get(DocumentBeanDao.class).clone();
        documentBeanDaoConfig.initIdentityScope(type);

        fileBeanDaoConfig = daoConfigMap.get(FileBeanDao.class).clone();
        fileBeanDaoConfig.initIdentityScope(type);

        propertyBeanDaoConfig = daoConfigMap.get(PropertyBeanDao.class).clone();
        propertyBeanDaoConfig.initIdentityScope(type);

        propertyBeanXDaoConfig = daoConfigMap.get(PropertyBeanXDao.class).clone();
        propertyBeanXDaoConfig.initIdentityScope(type);

        relatedDocumentIdSetBeanDaoConfig = daoConfigMap.get(RelatedDocumentIdSetBeanDao.class).clone();
        relatedDocumentIdSetBeanDaoConfig.initIdentityScope(type);

        unresolvedBeanDaoConfig = daoConfigMap.get(UnresolvedBeanDao.class).clone();
        unresolvedBeanDaoConfig.initIdentityScope(type);

        dataPackageDBeanDaoConfig = daoConfigMap.get(DataPackageDBeanDao.class).clone();
        dataPackageDBeanDaoConfig.initIdentityScope(type);

        applyDeptBeanDaoConfig = daoConfigMap.get(ApplyDeptBeanDao.class).clone();
        applyDeptBeanDaoConfig.initIdentityScope(type);

        acceptDeviceBeanDaoConfig = daoConfigMap.get(AcceptDeviceBeanDao.class).clone();
        acceptDeviceBeanDaoConfig.initIdentityScope(type);

        applyItemBeanDao = new ApplyItemBeanDao(applyItemBeanDaoConfig, this);
        checkApplyBeanDao = new CheckApplyBeanDao(checkApplyBeanDaoConfig, this);
        checkFileBeanDao = new CheckFileBeanDao(checkFileBeanDaoConfig, this);
        checkGroupBeanDao = new CheckGroupBeanDao(checkGroupBeanDaoConfig, this);
        checkItemBeanDao = new CheckItemBeanDao(checkItemBeanDaoConfig, this);
        checkTaskBeanDao = new CheckTaskBeanDao(checkTaskBeanDaoConfig, this);
        checkUnresolvedBeanDao = new CheckUnresolvedBeanDao(checkUnresolvedBeanDaoConfig, this);
        checkVerdBeanDao = new CheckVerdBeanDao(checkVerdBeanDaoConfig, this);
        deliveryListBeanDao = new DeliveryListBeanDao(deliveryListBeanDaoConfig, this);
        documentBeanDao = new DocumentBeanDao(documentBeanDaoConfig, this);
        fileBeanDao = new FileBeanDao(fileBeanDaoConfig, this);
        propertyBeanDao = new PropertyBeanDao(propertyBeanDaoConfig, this);
        propertyBeanXDao = new PropertyBeanXDao(propertyBeanXDaoConfig, this);
        relatedDocumentIdSetBeanDao = new RelatedDocumentIdSetBeanDao(relatedDocumentIdSetBeanDaoConfig, this);
        unresolvedBeanDao = new UnresolvedBeanDao(unresolvedBeanDaoConfig, this);
        dataPackageDBeanDao = new DataPackageDBeanDao(dataPackageDBeanDaoConfig, this);
        applyDeptBeanDao = new ApplyDeptBeanDao(applyDeptBeanDaoConfig, this);
        acceptDeviceBeanDao = new AcceptDeviceBeanDao(acceptDeviceBeanDaoConfig, this);

        registerDao(ApplyItemBean.class, applyItemBeanDao);
        registerDao(CheckApplyBean.class, checkApplyBeanDao);
        registerDao(CheckFileBean.class, checkFileBeanDao);
        registerDao(CheckGroupBean.class, checkGroupBeanDao);
        registerDao(CheckItemBean.class, checkItemBeanDao);
        registerDao(CheckTaskBean.class, checkTaskBeanDao);
        registerDao(CheckUnresolvedBean.class, checkUnresolvedBeanDao);
        registerDao(CheckVerdBean.class, checkVerdBeanDao);
        registerDao(DeliveryListBean.class, deliveryListBeanDao);
        registerDao(DocumentBean.class, documentBeanDao);
        registerDao(FileBean.class, fileBeanDao);
        registerDao(PropertyBean.class, propertyBeanDao);
        registerDao(PropertyBeanX.class, propertyBeanXDao);
        registerDao(RelatedDocumentIdSetBean.class, relatedDocumentIdSetBeanDao);
        registerDao(UnresolvedBean.class, unresolvedBeanDao);
        registerDao(DataPackageDBean.class, dataPackageDBeanDao);
        registerDao(ApplyDeptBean.class, applyDeptBeanDao);
        registerDao(AcceptDeviceBean.class, acceptDeviceBeanDao);
    }
    
    public void clear() {
        applyItemBeanDaoConfig.clearIdentityScope();
        checkApplyBeanDaoConfig.clearIdentityScope();
        checkFileBeanDaoConfig.clearIdentityScope();
        checkGroupBeanDaoConfig.clearIdentityScope();
        checkItemBeanDaoConfig.clearIdentityScope();
        checkTaskBeanDaoConfig.clearIdentityScope();
        checkUnresolvedBeanDaoConfig.clearIdentityScope();
        checkVerdBeanDaoConfig.clearIdentityScope();
        deliveryListBeanDaoConfig.clearIdentityScope();
        documentBeanDaoConfig.clearIdentityScope();
        fileBeanDaoConfig.clearIdentityScope();
        propertyBeanDaoConfig.clearIdentityScope();
        propertyBeanXDaoConfig.clearIdentityScope();
        relatedDocumentIdSetBeanDaoConfig.clearIdentityScope();
        unresolvedBeanDaoConfig.clearIdentityScope();
        dataPackageDBeanDaoConfig.clearIdentityScope();
        applyDeptBeanDaoConfig.clearIdentityScope();
        acceptDeviceBeanDaoConfig.clearIdentityScope();
    }

    public ApplyItemBeanDao getApplyItemBeanDao() {
        return applyItemBeanDao;
    }

    public CheckApplyBeanDao getCheckApplyBeanDao() {
        return checkApplyBeanDao;
    }

    public CheckFileBeanDao getCheckFileBeanDao() {
        return checkFileBeanDao;
    }

    public CheckGroupBeanDao getCheckGroupBeanDao() {
        return checkGroupBeanDao;
    }

    public CheckItemBeanDao getCheckItemBeanDao() {
        return checkItemBeanDao;
    }

    public CheckTaskBeanDao getCheckTaskBeanDao() {
        return checkTaskBeanDao;
    }

    public CheckUnresolvedBeanDao getCheckUnresolvedBeanDao() {
        return checkUnresolvedBeanDao;
    }

    public CheckVerdBeanDao getCheckVerdBeanDao() {
        return checkVerdBeanDao;
    }

    public DeliveryListBeanDao getDeliveryListBeanDao() {
        return deliveryListBeanDao;
    }

    public DocumentBeanDao getDocumentBeanDao() {
        return documentBeanDao;
    }

    public FileBeanDao getFileBeanDao() {
        return fileBeanDao;
    }

    public PropertyBeanDao getPropertyBeanDao() {
        return propertyBeanDao;
    }

    public PropertyBeanXDao getPropertyBeanXDao() {
        return propertyBeanXDao;
    }

    public RelatedDocumentIdSetBeanDao getRelatedDocumentIdSetBeanDao() {
        return relatedDocumentIdSetBeanDao;
    }

    public UnresolvedBeanDao getUnresolvedBeanDao() {
        return unresolvedBeanDao;
    }

    public DataPackageDBeanDao getDataPackageDBeanDao() {
        return dataPackageDBeanDao;
    }

    public ApplyDeptBeanDao getApplyDeptBeanDao() {
        return applyDeptBeanDao;
    }

    public AcceptDeviceBeanDao getAcceptDeviceBeanDao() {
        return acceptDeviceBeanDao;
    }

}
